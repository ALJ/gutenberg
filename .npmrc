# Necessary to prevent infinite recursion when running `pnpm run -r build`
# See: https://github.com/pnpm/pnpm/issues/2769
use-beta-cli=true
# Our package.json currently assumes this behavior
enable-pre-post-scripts=true

# These packages need to be hoisted due to how eslint and stylelint resolve
# modules. `eslint`'s problem _could_ be solved using this eslint-patch:
# https://github.com/microsoft/rushstack/tree/master/eslint/eslint-patch
# HOWEVER, because we also run eslint in the `react-native-editor` package
# context, that patch only works for the top-level global linting and fails
# for the react-native-editor package's own linting. That means we have to
# hoist eslint-plugins anyway, so we might as well not even use the patch
# in the first place. Stylelint doesn't even have a comparable patch, so we
# hoist those packages as well.
# Note: This won't effect consumers of the `@wordpress/eslint-config` package
# unless they use `pnpm` in a monorepo, in which case they'll eventually come
# across this longstanding eslint feature request that the patch is meant to solve:
# https://github.com/eslint/eslint/issues/3458
# In any case, they'll either be able to use the patch or run into the same
# problem as Gutenberg and need to end up hoisting eslint-plugin dependencies
# anyway. But note: this was always going to be a problem for anyone consuming
# these packages using `pnpm` in a monorepo settings, so switching to `pnpm`
# doesn't actually make the situation worse. In fact, it might be better because
# consumers of those packages might check to see how Gutenberg configures things
# and find this lengthy explanatory comment to help them out. Here's hoping!
public-hoist-pattern[]=stylelint*
public-hoist-pattern[]=eslint-plugin*

# These packages need to be hoisted for React Native to resolve them correctly
public-hoist-pattern[]=@react-navigation/native
public-hoist-pattern[]=dom-scroll-into-view
public-hoist-pattern[]=react-native-keyboard-aware-scroll-view
public-hoist-pattern[]=react-native-modal

# These type packages need to be hoisted for TypeScript to resolve them correctly
public-hoist-pattern[]=@types/react
public-hoist-pattern[]=csstype
public-hoist-pattern[]=@types/prop-types
public-hoist-pattern[]=@types/scheduler
